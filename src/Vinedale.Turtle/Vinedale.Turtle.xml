<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vinedale.Turtle</name>
    </assembly>
    <members>
        <member name="T:Vinedale.Turtle.Drawing.JumpToInstruction">
            <summary>
            An instruction representing an absolute turtle move.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Drawing.JumpToInstruction.X">
            <summary>
            The absolute X-coordinate to move to.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Drawing.JumpToInstruction.Y">
            <summary>
            The absolute Y-coordinate to move to.
            </summary>
        </member>
        <member name="T:Vinedale.Turtle.Drawing.LineInstruction">
            <summary>
            An instruction for the turtle to draw a line.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Drawing.LineInstruction.Length">
            <summary>
            Length of the line to draw.
            </summary>
        </member>
        <member name="T:Vinedale.Turtle.Drawing.PenStatus">
            <summary>
            An enum indicating if the turtle's pen is up or down.
            </summary>
        </member>
        <member name="F:Vinedale.Turtle.Drawing.PenStatus.Down">
            <summary>
            Pen down (ie, drawing).
            </summary>
        </member>
        <member name="F:Vinedale.Turtle.Drawing.PenStatus.Up">
            <summary>
            Pen up (ie, not drawing).
            </summary>
        </member>
        <member name="T:Vinedale.Turtle.Drawing.PenStatusInstruction">
            <summary>
            An instruction to (potentially) change the pen status.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Drawing.PenStatusInstruction.Status">
            <summary>
            The new pen status.
            </summary>
        </member>
        <member name="T:Vinedale.Turtle.Drawing.RotateInstruction">
            <summary>
            An instruction for the turtle to change heading.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Drawing.RotateInstruction.Angle">
            <summary>
            The angle by which to rotate (in degrees)
            </summary>
        </member>
        <member name="T:Vinedale.Turtle.Interfaces.ITurtle">
            <summary>
            The interface representing an on-screen turtle.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Interfaces.ITurtle.Heading">
            <summary>
            The direction in which the turtle is facing.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Interfaces.ITurtle.X">
            <summary>
            The current absolute X-coordinate of the turtle.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Interfaces.ITurtle.Y">
            <summary>
            The current absolute Y-coordinate of the turtle.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Interfaces.ITurtle.PenDown">
            <summary>
            The current status of the pen.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.Interfaces.ITurtle.Move(System.Double,System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Move the turtle a set distance.
            </summary>
            <param name="distance">The distance to move (positive is forward, negative is backward)</param>
            <param name="e"></param>
            <param name="windowSize"></param>
        </member>
        <member name="M:Vinedale.Turtle.Interfaces.ITurtle.Reset">
            <summary>
            Reset the turtle's location and heading.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.Interfaces.ITurtle.DrawTurtle(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Draw the turtle to a Graphics context.
            </summary>
            <param name="e">The event arguments including the graphics context.</param>
            <param name="windowSize">A <c>Rectangle</c> representing the size of the drawing window.</param>
        </member>
        <member name="T:Vinedale.Turtle.Interfaces.ITurtleContext">
            <summary>
            The turtle's equivalent of <c>InterpretorContext</c>.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.Interfaces.ITurtleContext.PendDrawingInstruction(Vinedale.Turtle.Drawing.Instruction)">
            <summary>
            Submit a drawing instruction to the list of instructions needed to compose the current screenview.
            </summary>
            <param name="instruction">The instruction to be added to the draw list.</param>
        </member>
        <member name="M:Vinedale.Turtle.Interfaces.ITurtleContext.PendCleanInstruction(System.Boolean)">
            <summary>
            Modify the instruction list to carry out the "clean" instruction behaviour.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.Interfaces.ITurtleContext.ExecuteDrawingInstructions(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Execute the list of drawing instructions that compose the current screenview.
            </summary>
            <param name="e">The paint event arguments.</param>
            <param name="size">The size of the screenview; needed to compute wrapping etc.</param>
        </member>
        <member name="E:Vinedale.Turtle.Interfaces.ITurtleContext.InstructionsChanged">
            <summary>
            Event fired when the list of drawing instructions has changed, so that anything using this context can request a repaint.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Interfaces.ITurtleContext.CurrentTurtle">
            <summary>
            The active turtle.
            </summary>
        </member>
        <member name="T:Vinedale.Turtle.Resources.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandBackExampleText">
            <summary>
              Looks up a localized string similar to X.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandBackHelpText">
            <summary>
              Looks up a localized string similar to Tells the turtle to move backwards X steps..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandBackWrongTypeError">
            <summary>
              Looks up a localized string similar to You should tell me how far to go backwards as a number..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandCleanHelpText">
            <summary>
              Looks up a localized string similar to Clears the screen without moving the turtle..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandClearGraphicsHelpText">
            <summary>
              Looks up a localized string similar to Clears the screen and returns the turtle to its start point..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandForwardExampleText">
            <summary>
              Looks up a localized string similar to X.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandForwardHelpText">
            <summary>
              Looks up a localized string similar to Tells the turtle to move forward X steps..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandForwardWrongTypeError">
            <summary>
              Looks up a localized string similar to You should tell me how far to go forwards as a number..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandLeftExampleText">
            <summary>
              Looks up a localized string similar to X.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandLeftHelpText">
            <summary>
              Looks up a localized string similar to Tells the turtle to turn left X degrees..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandLeftWrongTypeError">
            <summary>
              Looks up a localized string similar to You should tell me how far to turn as a number..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandPenDownHelpText">
            <summary>
              Looks up a localized string similar to Lowers the pen, so the turtle starts drawing..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandPenUpHelpText">
            <summary>
              Looks up a localized string similar to Lifts the pen, so the turtle stops drawing..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandRightExampleText">
            <summary>
              Looks up a localized string similar to X.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandRightHelpText">
            <summary>
              Looks up a localized string similar to Tells the turtle to turn right X degrees..
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.Resources.Strings.CommandRightWrongTypeError">
            <summary>
              Looks up a localized string similar to You should tell me how far to turn as a number..
            </summary>
        </member>
        <member name="T:Vinedale.Turtle.SoftTurtle">
            <summary>
            The class which represents an on-screen turtle.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.SoftTurtle.Heading">
            <summary>
            The direction in which the turtle is facing, expressed in degrees.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.SoftTurtle.X">
            <summary>
            The turtle's X location.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.SoftTurtle.Y">
            <summary>
            The turtle's Y location.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.SoftTurtle.PenDown">
            <summary>
            The current status of the pen.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.SoftTurtle.HeadingRadians">
            <summary>
            The direction in which the turtle is facing, expressed in radians.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.SoftTurtle.DrawTurtle(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Draw the turtle to a graphics context.
            </summary>
            <param name="e">The event encapsulating the graphics context.</param>
            <param name="windowSize">A <c>Rectangle</c> representing the size of the drawing window.</param>
        </member>
        <member name="M:Vinedale.Turtle.SoftTurtle.Move(System.Double,System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Move the turtle a given distance, drawing a line behind it.
            </summary>
            <param name="distance">The distance to move.</param>
            <param name="e">Paint event args</param>
            <param name="windowSize">Size of the drawing area.</param>
        </member>
        <member name="M:Vinedale.Turtle.SoftTurtle.Reset">
            <summary>
            Reset the turtle's location and heading.
            </summary>
        </member>
        <member name="T:Vinedale.Turtle.TurtleCommands">
            <summary>
            The class that defines turtle drawing commands.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.TurtleCommands.#ctor(Vinedale.Turtle.Interfaces.ITurtleContext)">
            <summary>
            The sole constructor for this class.
            </summary>
            <param name="context">The drawing context for the commands.</param>
        </member>
        <member name="M:Vinedale.Turtle.TurtleCommands.RegisterProcedures">
            <summary>
            Returns the commands implemented by this class.
            </summary>
            <returns>A list of procedure definitions.</returns>
        </member>
        <member name="M:Vinedale.Turtle.TurtleCommands.PenUp(Logo.Interpretation.InterpretorContext,Logo.Tokens.Token[])">
            <summary>
            Lift the turtle's pen.
            </summary>
            <param name="context">The interpretor context.</param>
            <param name="input">Ignored.</param>
            <returns><c>null</c>.</returns>
        </member>
        <member name="M:Vinedale.Turtle.TurtleCommands.PenDown(Logo.Interpretation.InterpretorContext,Logo.Tokens.Token[])">
            <summary>
            Lower the turtle's pen.
            </summary>
            <param name="context">The interpretor context.</param>
            <param name="input">Ignored.</param>
            <returns><c>null</c>.</returns>
        </member>
        <member name="M:Vinedale.Turtle.TurtleCommands.Clean(Logo.Interpretation.InterpretorContext,Logo.Tokens.Token[])">
            <summary>
            Clean the screen without moving the turtle.
            </summary>
            <param name="context">The interpretor context.</param>
            <param name="input">Ignored.</param>
            <returns><c>null</c>.</returns>
        </member>
        <member name="M:Vinedale.Turtle.TurtleCommands.ClearGraphics(Logo.Interpretation.InterpretorContext,Logo.Tokens.Token[])">
            <summary>
            Clean the screen and return the turtle to its starting position.
            </summary>
            <param name="context">The interpretor context.</param>
            <param name="input">Ignored.</param>
            <returns><c>null</c>.</returns>
        </member>
        <member name="T:Vinedale.Turtle.TurtleContext">
            <summary>
            Implementation of <c>ITurtleContext</c> which draws to a <c>TurtleWindow</c>.
            </summary>
        </member>
        <member name="E:Vinedale.Turtle.TurtleContext.InstructionsChanged">
            <summary>
            Event fired when the instruction list has changed.
            </summary>
        </member>
        <member name="P:Vinedale.Turtle.TurtleContext.CurrentTurtle">
            <summary>
            The current active turtle.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.TurtleContext.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.TurtleContext.PendDrawingInstruction(Vinedale.Turtle.Drawing.Instruction)">
            <summary>
            Add a new drawing instruction to the instruction list and redraw the window.
            </summary>
            <param name="instruction">The <c>Instruction</c> to be drawn.</param>
        </member>
        <member name="M:Vinedale.Turtle.TurtleContext.PendCleanInstruction(System.Boolean)">
            <summary>
            Reset the drawing instruction list.
            </summary>
            <param name="resetPosition">Return the turtle to its home position if true, not if false.</param>
        </member>
        <member name="M:Vinedale.Turtle.TurtleContext.ExecuteDrawingInstructions(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Execute the list of drawing instructions.
            </summary>
            <param name="e">The paint event args received from the system.</param>
            <param name="size">The size of the drawing area.</param>
        </member>
        <member name="M:Vinedale.Turtle.TurtleContext.OnInstructionsChanged">
            <summary>
            Emits the <see cref="E:Vinedale.Turtle.TurtleContext.InstructionsChanged" /> event.
            </summary>
        </member>
        <member name="F:Vinedale.Turtle.TurtleWindow.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Vinedale.Turtle.TurtleWindow.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Vinedale.Turtle.TurtleWindow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
